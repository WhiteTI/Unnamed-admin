/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as appAuthImport } from './routes/(app)/_auth'
import { Route as appAuthDashboardImport } from './routes/(app)/_auth.dashboard'
import { Route as appAuthDashboardIndexImport } from './routes/(app)/_auth.dashboard.index'
import { Route as appAuthDashboardGameWeaponsImport } from './routes/(app)/_auth.dashboard.$game.$weapons'
import { Route as appAuthDashboardGameSetsImport } from './routes/(app)/_auth.dashboard.$game.$sets'
import { Route as appAuthDashboardGameCharactersImport } from './routes/(app)/_auth.dashboard.$game.$characters'
import { Route as appAuthDashboardGameCharactersNewImport } from './routes/(app)/_auth.dashboard.$game.$characters_.new'

// Create Virtual Routes

const appImport = createFileRoute('/(app)')()

// Create/Update Routes

const appRoute = appImport.update({
  id: '/(app)',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const appAuthRoute = appAuthImport.update({
  id: '/_auth',
  getParentRoute: () => appRoute,
} as any)

const appAuthDashboardRoute = appAuthDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => appAuthRoute,
} as any)

const appAuthDashboardIndexRoute = appAuthDashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => appAuthDashboardRoute,
} as any)

const appAuthDashboardGameWeaponsRoute =
  appAuthDashboardGameWeaponsImport.update({
    id: '/$game/$weapons',
    path: '/$game/$weapons',
    getParentRoute: () => appAuthDashboardRoute,
  } as any)

const appAuthDashboardGameSetsRoute = appAuthDashboardGameSetsImport.update({
  id: '/$game/$sets',
  path: '/$game/$sets',
  getParentRoute: () => appAuthDashboardRoute,
} as any)

const appAuthDashboardGameCharactersRoute =
  appAuthDashboardGameCharactersImport.update({
    id: '/$game/$characters',
    path: '/$game/$characters',
    getParentRoute: () => appAuthDashboardRoute,
  } as any)

const appAuthDashboardGameCharactersNewRoute =
  appAuthDashboardGameCharactersNewImport.update({
    id: '/$game/$characters_/new',
    path: '/$game/$characters/new',
    getParentRoute: () => appAuthDashboardRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/(app)': {
      id: '/(app)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appImport
      parentRoute: typeof rootRoute
    }
    '/(app)/_auth': {
      id: '/(app)/_auth'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appAuthImport
      parentRoute: typeof appRoute
    }
    '/(app)/_auth/dashboard': {
      id: '/(app)/_auth/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof appAuthDashboardImport
      parentRoute: typeof appAuthImport
    }
    '/(app)/_auth/dashboard/': {
      id: '/(app)/_auth/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof appAuthDashboardIndexImport
      parentRoute: typeof appAuthDashboardImport
    }
    '/(app)/_auth/dashboard/$game/$characters': {
      id: '/(app)/_auth/dashboard/$game/$characters'
      path: '/$game/$characters'
      fullPath: '/dashboard/$game/$characters'
      preLoaderRoute: typeof appAuthDashboardGameCharactersImport
      parentRoute: typeof appAuthDashboardImport
    }
    '/(app)/_auth/dashboard/$game/$sets': {
      id: '/(app)/_auth/dashboard/$game/$sets'
      path: '/$game/$sets'
      fullPath: '/dashboard/$game/$sets'
      preLoaderRoute: typeof appAuthDashboardGameSetsImport
      parentRoute: typeof appAuthDashboardImport
    }
    '/(app)/_auth/dashboard/$game/$weapons': {
      id: '/(app)/_auth/dashboard/$game/$weapons'
      path: '/$game/$weapons'
      fullPath: '/dashboard/$game/$weapons'
      preLoaderRoute: typeof appAuthDashboardGameWeaponsImport
      parentRoute: typeof appAuthDashboardImport
    }
    '/(app)/_auth/dashboard/$game/$characters_/new': {
      id: '/(app)/_auth/dashboard/$game/$characters_/new'
      path: '/$game/$characters/new'
      fullPath: '/dashboard/$game/$characters/new'
      preLoaderRoute: typeof appAuthDashboardGameCharactersNewImport
      parentRoute: typeof appAuthDashboardImport
    }
  }
}

// Create and export the route tree

interface appAuthDashboardRouteChildren {
  appAuthDashboardIndexRoute: typeof appAuthDashboardIndexRoute
  appAuthDashboardGameCharactersRoute: typeof appAuthDashboardGameCharactersRoute
  appAuthDashboardGameSetsRoute: typeof appAuthDashboardGameSetsRoute
  appAuthDashboardGameWeaponsRoute: typeof appAuthDashboardGameWeaponsRoute
  appAuthDashboardGameCharactersNewRoute: typeof appAuthDashboardGameCharactersNewRoute
}

const appAuthDashboardRouteChildren: appAuthDashboardRouteChildren = {
  appAuthDashboardIndexRoute: appAuthDashboardIndexRoute,
  appAuthDashboardGameCharactersRoute: appAuthDashboardGameCharactersRoute,
  appAuthDashboardGameSetsRoute: appAuthDashboardGameSetsRoute,
  appAuthDashboardGameWeaponsRoute: appAuthDashboardGameWeaponsRoute,
  appAuthDashboardGameCharactersNewRoute:
    appAuthDashboardGameCharactersNewRoute,
}

const appAuthDashboardRouteWithChildren =
  appAuthDashboardRoute._addFileChildren(appAuthDashboardRouteChildren)

interface appAuthRouteChildren {
  appAuthDashboardRoute: typeof appAuthDashboardRouteWithChildren
}

const appAuthRouteChildren: appAuthRouteChildren = {
  appAuthDashboardRoute: appAuthDashboardRouteWithChildren,
}

const appAuthRouteWithChildren =
  appAuthRoute._addFileChildren(appAuthRouteChildren)

interface appRouteChildren {
  appAuthRoute: typeof appAuthRouteWithChildren
}

const appRouteChildren: appRouteChildren = {
  appAuthRoute: appAuthRouteWithChildren,
}

const appRouteWithChildren = appRoute._addFileChildren(appRouteChildren)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/': typeof appAuthRouteWithChildren
  '/dashboard': typeof appAuthDashboardRouteWithChildren
  '/dashboard/': typeof appAuthDashboardIndexRoute
  '/dashboard/$game/$characters': typeof appAuthDashboardGameCharactersRoute
  '/dashboard/$game/$sets': typeof appAuthDashboardGameSetsRoute
  '/dashboard/$game/$weapons': typeof appAuthDashboardGameWeaponsRoute
  '/dashboard/$game/$characters/new': typeof appAuthDashboardGameCharactersNewRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/': typeof appAuthRouteWithChildren
  '/dashboard': typeof appAuthDashboardIndexRoute
  '/dashboard/$game/$characters': typeof appAuthDashboardGameCharactersRoute
  '/dashboard/$game/$sets': typeof appAuthDashboardGameSetsRoute
  '/dashboard/$game/$weapons': typeof appAuthDashboardGameWeaponsRoute
  '/dashboard/$game/$characters/new': typeof appAuthDashboardGameCharactersNewRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/login': typeof LoginRoute
  '/(app)': typeof appRouteWithChildren
  '/(app)/_auth': typeof appAuthRouteWithChildren
  '/(app)/_auth/dashboard': typeof appAuthDashboardRouteWithChildren
  '/(app)/_auth/dashboard/': typeof appAuthDashboardIndexRoute
  '/(app)/_auth/dashboard/$game/$characters': typeof appAuthDashboardGameCharactersRoute
  '/(app)/_auth/dashboard/$game/$sets': typeof appAuthDashboardGameSetsRoute
  '/(app)/_auth/dashboard/$game/$weapons': typeof appAuthDashboardGameWeaponsRoute
  '/(app)/_auth/dashboard/$game/$characters_/new': typeof appAuthDashboardGameCharactersNewRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/'
    | '/dashboard'
    | '/dashboard/'
    | '/dashboard/$game/$characters'
    | '/dashboard/$game/$sets'
    | '/dashboard/$game/$weapons'
    | '/dashboard/$game/$characters/new'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/'
    | '/dashboard'
    | '/dashboard/$game/$characters'
    | '/dashboard/$game/$sets'
    | '/dashboard/$game/$weapons'
    | '/dashboard/$game/$characters/new'
  id:
    | '__root__'
    | '/login'
    | '/(app)'
    | '/(app)/_auth'
    | '/(app)/_auth/dashboard'
    | '/(app)/_auth/dashboard/'
    | '/(app)/_auth/dashboard/$game/$characters'
    | '/(app)/_auth/dashboard/$game/$sets'
    | '/(app)/_auth/dashboard/$game/$weapons'
    | '/(app)/_auth/dashboard/$game/$characters_/new'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LoginRoute: typeof LoginRoute
  appRoute: typeof appRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  LoginRoute: LoginRoute,
  appRoute: appRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/login",
        "/(app)"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/(app)": {
      "filePath": "(app)",
      "children": [
        "/(app)/_auth"
      ]
    },
    "/(app)/_auth": {
      "filePath": "(app)/_auth.tsx",
      "parent": "/(app)",
      "children": [
        "/(app)/_auth/dashboard"
      ]
    },
    "/(app)/_auth/dashboard": {
      "filePath": "(app)/_auth.dashboard.tsx",
      "parent": "/(app)/_auth",
      "children": [
        "/(app)/_auth/dashboard/",
        "/(app)/_auth/dashboard/$game/$characters",
        "/(app)/_auth/dashboard/$game/$sets",
        "/(app)/_auth/dashboard/$game/$weapons",
        "/(app)/_auth/dashboard/$game/$characters_/new"
      ]
    },
    "/(app)/_auth/dashboard/": {
      "filePath": "(app)/_auth.dashboard.index.tsx",
      "parent": "/(app)/_auth/dashboard"
    },
    "/(app)/_auth/dashboard/$game/$characters": {
      "filePath": "(app)/_auth.dashboard.$game.$characters.tsx",
      "parent": "/(app)/_auth/dashboard"
    },
    "/(app)/_auth/dashboard/$game/$sets": {
      "filePath": "(app)/_auth.dashboard.$game.$sets.tsx",
      "parent": "/(app)/_auth/dashboard"
    },
    "/(app)/_auth/dashboard/$game/$weapons": {
      "filePath": "(app)/_auth.dashboard.$game.$weapons.tsx",
      "parent": "/(app)/_auth/dashboard"
    },
    "/(app)/_auth/dashboard/$game/$characters_/new": {
      "filePath": "(app)/_auth.dashboard.$game.$characters_.new.tsx",
      "parent": "/(app)/_auth/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
